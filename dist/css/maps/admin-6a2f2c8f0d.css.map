{"version":3,"file":"../admin-6a2f2c8f0d.css","sources":["admin.scss","mixins/_prop.scss","mixins/_bp.scss","common/_variables.scss","common/_root.scss"],"sourcesContent":["/*\n * Styles for /wp-admin\n */\n\n//  @import \"common/_reset.scss\";\n@import \"mixins/prop\";\n\n//  @import \"mixins/_screen-reader-text\";\n@import \"mixins/_bp\";\n\n@import \"common/variables\";\n@import \"common/root\";\n// @import \"common/_type.scss\";\n//  @import \"common/_social-brands.scss\";\n\n//  @import \"common/container\";\n//  @import \"common/header\";\n//  @import \"common/footer\";\n","// CSS Custom Properties mixin\n@mixin prop($prop, $value) {\n\t#{$prop}: map-get($root-variables, $value);\n\t#{$prop}: var($value, map-get($root-variables, $value));\n}\n\n// helpful wrapper for colour\n@mixin colour($value) {\n\t@include prop(color, $value);\n}\n\n// helpful wrapper for background colour\n@mixin background-colour($value) {\n\t@include prop(background-color, $value);\n}\n\n// helpful wrapper for border colour\n@mixin border-colour($value) {\n\t@include prop(border-color, $value);\n}\n\n// for the heathens who bastardise the English language.\n@mixin color($value) {\n\t@include colour($value);\n}\n@mixin background-color($value) {\n\t@include background-colour($value);\n}\n@mixin border-color($value) {\n\t@include border-colour($value);\n}\n","// Breakpoint mixin\n\n/*\n * Generate a media query based on convenient names such as sm, md , lg. The\n * names are set in a $breakpoints-map.\n *\n * Usage:\n *\n * @include bp(sm); // @media only screen and (min-width: 480px)\n *\n * @include bp($max: sm);  // @media only screen and (max-width: 480px)\n *\n * @include bp(sm, md);  // @media only screen and (min-width: 480px) and (max-width: 768px)\n *\n * @include bp(sm, $type: print);  // @media print and (min-width: 480px)\n *\n * @include bp(sm, md, print);  // @media print and (min-width: 480px) and (max-width: 768px)\n */\n\n@mixin bp($min: null, $max: null, $type: only screen) {\n\t// get the value/s from the $breakpoints-map\n\t$min-value: map-get($breakpoint-map, $min);\n\t$max-value: map-get($breakpoint-map, $max);\n\n\t// build the media query\n\t$min: if($min, \"(min-width:#{$min-value})\", null);\n\t$max: if($max, \"(max-width:#{$max-value})\", null);\n\t$and: if($min and $max, \" and \", null);\n\n\t// output the media query with the @content\n\t@media #{$type} and #{$min $and $max} {\n\t\t@content;\n\t}\n}\n\n@function bp($name) {\n\t@return map-get($breakpoint-map, $name);\n}\n","/*\n * Project variables\n */\n\n/* Colours */\n\n// Base colours\n$grey-1: #fafafa;\n$grey-2: #f5f5f5;\n$grey-3: #eeeeee;\n$grey-4: #e0e0e0;\n$grey-5: #bdbdbd;\n$grey-6: #9e9e9e;\n$grey-7: #757575;\n$grey-8: #616161;\n$grey-9: #424242;\n$grey-10: #212121;\n\n/*\n * Colour variables.\n *\n * If you alter variable names, also update EditorColourPalette.php\n * These cascade to block editor colour palette.\n *\n * Sass variables need to be #{interpolated}\n *\n * Don't use --text as this causes a collision with WordPRess default classes.\n */\n$colour-map: (\n\t--primary: red,\n\t--secondary: green,\n\t--tertiary: pink,\n\t--white: #fff,\n\t--body-text: #{$grey-10},\n\t--link: blue,\n\t--link-hover: darkblue\n);\n\n/*\n * Layout variables.\n *\n * Used for the block-wrapper and more layout options.\n */\n$layout-map: (\n\t--horizontal-gap: 1rem,\n\t--vertical-gap: 2rem,\n\t--max-content-width: 920px,\n\t--max-container-width: 1200px\n);\n\n// merge maps to be output in the :root\n$root-variables: map-merge($colour-map, $layout-map);\n\n// Base background-color\n$base-background-colour: white;\n\n/* Typography */\n\n// Base typography\n$base-font-size: 16px;\n$base-line-height: 1.5;\n$base-font-weight: 400;\n\n// Font stacks\n$sans-serif: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans,\n\tUbuntu, Cantarell, \"Helvetica Neue\", sans-serif; // System font stack\n$serif: Georgia, \"Times New Roman\", Times, serif;\n$monospace: Menlo, Monaco, Consolas, \"Courier New\", monospace;\n\n// Default font\n$base-font: $sans-serif;\n\n/*\n * Breakpoint variables.\n *\n * Used for bp() mixin and bp() function\n */\n$breakpoint-map: (\n\tsm: 480px,\n\tmd: 768px,\n\tlg: 1024px,\n\txl: 1200px\n);\n","/*\n * CSS custom properties\n * We can finally spell \"colour\" correctly üëç\n *\n * Custom properties can be applied to html or :root\n * :root will target root selector of SVGs as well, for example\n */\n:root {\n\t@each $prop, $variable in $root-variables {\n\t\t#{$prop}: $variable;\n\t}\n}\n"],"names":[],"mappings":";AAAA;;GAEG;AEAH;;;;;;;;;;;;;;;GAeG;ACjBH;;GAEG;AAEH,aAAa;AAcb;;;;;;;;;GASG;AAWH;;;;GAIG;AAcH,gBAAgB;AAgBhB;;;;GAIG;AC5EH;;;;;;GAMG;AACH,AAAA,KAAK,CAAC;EAEJ,SAAQ,EDoBE,GAAG;ECpBb,WAAQ,EDqBI,KAAK;ECrBjB,UAAQ,EDsBG,IAAI;ECtBf,OAAQ,EDuBA,IAAI;ECvBZ,WAAQ,EDwBI,OAAW;ECxBvB,MAAQ,EDyBD,IAAI;ECzBX,YAAQ,ED0BK,QAAQ;EC1BrB,gBAAQ,EDmCS,IAAI;ECnCrB,cAAQ,EDoCO,IAAI;ECpCnB,mBAAQ,EDqCY,KAAK;ECrCzB,qBAAQ,EDsCc,MAAM,GCpC7B"}
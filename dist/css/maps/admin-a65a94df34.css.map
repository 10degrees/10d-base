{"version":3,"file":"../admin-a65a94df34.css","sources":["admin.scss","mixins/_prop.scss","mixins/_bp.scss","common/_variables.scss","common/_root.scss"],"sourcesContent":["/*\n * Styles for /wp-admin\n */\n\n//  @import \"common/_reset.scss\";\n@import \"mixins/prop\";\n\n//  @import \"mixins/_screen-reader-text\";\n@import \"mixins/_bp\";\n\n@import \"common/variables\";\n@import \"common/root\";\n// @import \"common/_type.scss\";\n//  @import \"common/_social-brands.scss\";\n\n//  @import \"common/container\";\n//  @import \"common/header\";\n//  @import \"common/footer\";\n","// CSS Custom Properties mixin\n@mixin prop($prop, $value) {\n\t#{$prop}: map-get($variables, $value);\n\t#{$prop}: var($value, map-get($variables, $value));\n}\n\n// helpful wrapper for colour\n@mixin colour($value) {\n\t@include prop(color, $value);\n}\n\n// helpful wrapper for background colour\n@mixin background-colour($value) {\n\t@include prop(background-color, $value);\n}\n\n// helpful wrapper for border colour\n@mixin border-colour($value) {\n\t@include prop(border-color, $value);\n}\n","// Breakpoint mixins\n// Usage  @include bp(md) {}\n@mixin bp($point) {\n  @if $point==sm {\n    @media only screen and (min-width: #{$bp-sm}) {\n      @content;\n    }\n  }\n  @if $point==md {\n    @media only screen and (min-width: #{$bp-md}) {\n      @content;\n    }\n  }\n  @if $point==lg {\n    @media only screen and (min-width: #{$bp-lg}) {\n      @content;\n    }\n  }\n  @if $point==xlg {\n    @media only screen and (min-width: #{$bp-xlg}) {\n      @content;\n    }\n  }\n}\n","/*\n * Project variables\n */\n\n/* Colours */\n\n// Base colours\n$grey-1: #fafafa;\n$grey-2: #f5f5f5;\n$grey-3: #eeeeee;\n$grey-4: #e0e0e0;\n$grey-5: #bdbdbd;\n$grey-6: #9e9e9e;\n$grey-7: #757575;\n$grey-8: #616161;\n$grey-9: #424242;\n$grey-10: #212121;\n\n// Project variables.\n// Colours and container widths.\n// If you alter variable names, also update EditorColourPalette.php\n// These cascade to block editor colour palette\n$colour-map: (\n\t--primary: red,\n\t--secondary: green,\n\t--tertiary: pink,\n\t--text: #{$grey-10},\n\t--link: blue,\n\t--link-hover: darkblue\n);\n\n// layout variables.\n$layout-map: (\n\t--horizontal-gap: 1rem,\n\t--vertical-gap: 2rem,\n\t--max-content-width: 920px,\n\t--max-container-width: 1200px\n);\n\n// merge maps to be output in the :root\n$variables: map-merge($colour-map, $layout-map);\n\n// Base background-color\n$base-background-colour: white;\n\n/* Typography */\n\n// Base typography\n$base-font-size: 16px;\n$base-line-height: 1.5;\n$base-font-weight: 400;\n\n// Font stacks\n$sans-serif: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen-Sans,\n\tUbuntu, Cantarell, \"Helvetica Neue\", sans-serif; // System font stack\n$serif: Georgia, \"Times New Roman\", Times, serif;\n$monospace: Menlo, Monaco, Consolas, \"Courier New\", monospace;\n\n// Default font\n$base-font: $sans-serif;\n\n// Breakpoints\n$bp-sm: 480px;\n$bp-md: 768px;\n$bp-lg: 1024px;\n$bp-xlg: 1200px;\n","/*\n * CSS custom properties\n * We can finally spell \"colour\" correctly üëç\n *\n * Custom properties can be applied to html or :root\n * :root will target root selector of SVGs as well, for example\n */\n:root {\n  @each $prop, $variable in $variables {\n    #{$prop}: $variable;\n  }\n}\n"],"names":[],"mappings":";AAAA;;GAEG;AGFH;;GAEG;AAEH,aAAa;AAyCb,gBAAgB;AC7ChB;;;;;;GAMG;AACH,AAAA,KAAK,CAAC;EAEF,SAAQ,EDcA,GAAG;ECdX,WAAQ,EDeE,KAAK;ECff,UAAQ,EDgBC,IAAI;EChBb,MAAQ,EDiBH,OAAW;ECjBhB,MAAQ,EDkBH,IAAI;EClBT,YAAQ,EDmBG,QAAQ;ECnBnB,gBAAQ,EDwBO,IAAI;ECxBnB,cAAQ,EDyBK,IAAI;ECzBjB,mBAAQ,ED0BU,KAAK;EC1BvB,qBAAQ,ED2BY,MAAM,GCzB7B"}